#pragma once
#ifndef EXPLOITS_HPP
#define EXPLOITS_HPP

#include "../../../ext/imgui/imgui.h"
#include "../features.hpp"
#include "../ac.hpp"
#include "../globals.hpp"
#include "../../util/math.hpp"

namespace exploits {

	void run()
	{
		if (globals::features::exploits::freezeArmor) *ac::entity::getArmor(*ac::entity::getLocalPlayer()) = 1337;
		if (globals::features::exploits::freezeHealth) *ac::entity::getHealth(*ac::entity::getLocalPlayer()) = 1337;
		if (globals::features::exploits::freezeAmmo) *ac::entity::getAmmo(*ac::entity::getLocalPlayer()) = 1337;

		if (globals::features::exploits::rapidFire && !globals::features::exploits::rapidSet)
		{
			void* target = (void*)(globals::venom::moduleBase + globals::offsets::rapidFire);
			DWORD oldProtect;
			VirtualProtect(target, 2, PAGE_READWRITE, &oldProtect);
			memcpy(target, (BYTE*)"\x90\x90", 2);
			VirtualProtect(target, 2, oldProtect, &oldProtect);

			globals::features::exploits::rapidSet = true;
		}
		else if (!globals::features::exploits::rapidFire && globals::features::exploits::rapidSet)
		{
			void* target = (void*)(globals::venom::moduleBase + globals::offsets::rapidFire);
			DWORD oldProtect;
			VirtualProtect(target, 2, PAGE_READWRITE, &oldProtect);
			memcpy(target, (BYTE*)"\x89\x0A", 2);
			VirtualProtect(target, 2, oldProtect, &oldProtect);

			globals::features::exploits::rapidSet = false;
		}

		if (globals::features::exploits::noRecoil && !globals::features::exploits::recoilSet)
		{
			void* target = (void*)(globals::venom::moduleBase + globals::offsets::noRecoil);
			DWORD oldProtect;
			VirtualProtect(target, 10, PAGE_READWRITE, &oldProtect);
			memcpy(target, (BYTE*)"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90", 10);
			VirtualProtect(target, 10, oldProtect, &oldProtect);

			globals::features::exploits::recoilSet = true;
		}
		else if (!globals::features::exploits::noRecoil && globals::features::exploits::recoilSet)
		{
			void* target = (void*)(globals::venom::moduleBase + globals::offsets::noRecoil);
			DWORD oldProtect;
			VirtualProtect(target, 10, PAGE_READWRITE, &oldProtect);
			memcpy(target, (BYTE*)"\x50\x8D\x4C\x24\x1C\x51\x8B\xCE\xFF\xD2", 10);
			VirtualProtect(target, 10, oldProtect, &oldProtect);

			globals::features::exploits::recoilSet = false;
		}
	}

	void load()
	{
		features::addDrawing(run);
	}
}


#endif